{"version":3,"file":"static/js/602.5d8375c6.chunk.js","mappings":"mKAgCA,IA7BiB,SAACA,EAAkBC,GAElC,OAAO,SAACC,GACN,IAAMC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GACzBC,GAAWC,EAAAA,EAAAA,MACXC,EAAcL,EAAYM,UAYhC,OAVAC,EAAAA,EAAAA,YAAU,WACc,qBAAXC,SACJH,GAEwD,KAArC,OAAbP,QAAa,IAAbA,OAAA,EAAAA,EAAeW,QAAQT,EAAYU,YAC5CP,EAAS,OAAQ,CAAEQ,SAAS,IAF5BR,EAAS,QAAS,CAAEQ,SAAS,OAKhC,CAACN,EAAaL,EAAYU,SAAUP,IAEjB,qBAAXK,OACLR,EAAYY,WACdC,QAAQC,IAAI,0BACL,OAGF,SAACjB,GAAD,UAAsBE,IAExB,Q,6ICrBHgB,EAAUC,EAAAA,EAAAA,MACVC,EAAWC,EAAAA,EAAAA,OA0FnB,WAAeC,EAAAA,EAAAA,IAxFO,WACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAA0BC,EAAAA,EAAAA,IAAW,+BAAD,OAAgCF,IAA5DG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,GACEF,EAAAA,EAAAA,IAAW,YADCG,EAAd,EAAQF,KAA6BG,EAArC,EAA4BF,QAGtBtB,GAAWC,EAAAA,EAAAA,MA8BjB,OACE,4BACE,UAAC,IAAD,CAAYwB,MAAO,CAAEC,OAAQ,UAA7B,WACE,SAAC,SAAD,CACED,MAAO,CAAEE,OAAQ,WACjBC,QAAS,kBAAM5B,EAAS,gBAF1B,yBAMA,SAAC,SAAD,sBAEF,0BACE,UAAC,KAAD,YACE,SAACY,EAAD,CACEiB,MAAO,EACPC,KAAK,YACLL,MAAO,CAAEM,YAAa,GAAIC,aAAc,IAH1C,6BAOA,gBAAKP,MAAO,CAAEQ,QAAS,OAAQC,cAAe,OAA9C,UACE,SAAC,KAAD,CACEC,KAAK,QACLC,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAOnB,EAASmB,IAC1BhB,QAASE,EACTe,SAAUf,EACVC,MAAO,CAAEe,SAAU,KANrB,SAQGjB,EAAakB,KAAI,SAACC,GAAD,OAChB,SAAC5B,EAAD,CAAQ6B,MAAOD,EAAKE,GAApB,oBACOF,EAAKE,GADZ,aACmBF,EAAKP,OADKO,EAAKE,YAMxC,gBAAKnB,MAAO,CAAEoB,UAAW,QAAzB,UACE,SAAC,IAAD,CACEC,QAlEI,CACd,CACEC,MAAO,IACPC,UAAW,KACXC,MAAO,IAET,CACEF,MAAO,OACPC,UAAW,YAEb,CACED,MAAO,OACPC,UAAW,WAEb,CACED,MAAO,WACPC,UAAW,YAEb,CACED,MAAO,YACPC,UAAW,aAEb,CACED,MAAO,OACPC,UAAW,SA2CHE,WAAY7B,EACZ8B,OAAQ,SAACC,GAAD,OAAYA,EAAOR,IAC3BtB,QAASA,EACT+B,OAAQ,CAAEC,EAAG,mBASY,CAAC","sources":["HOC/withAuth.js","Pages/Attendance/AttendanceLog.js"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../Store/AuthContext\";\nconst withAuth = (WrappedComponent, protectedPage) => {\n  // eslint-disable-next-line react/display-name\n  return (props) => {\n    const authContext = useContext(AuthContext);\n    const navigate = useNavigate();\n    const accessToken = authContext.userToken;\n\n    useEffect(() => {\n      if (typeof window !== \"undefined\") {\n        if (!accessToken) {\n          navigate(\"/auth\", { replace: true });\n        } else if (protectedPage?.indexOf(authContext.userRole) === -1) {\n          navigate(\"/403\", { replace: true });\n        }\n      }\n    }, [accessToken, authContext.userRole, navigate]);\n\n    if (typeof window !== \"undefined\") {\n      if (authContext.isLoading) {\n        console.log(\"loading from with auth\");\n        return null;\n      }\n\n      return <WrappedComponent {...props} />;\n    }\n    return null;\n  };\n};\n\nexport default withAuth;\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, Typography, Table, Select } from \"antd\";\r\nimport withAuth from \"../../HOC/withAuth\";\r\nimport { Card, FormSelect } from \"../../Components\";\r\nimport { useGetData } from \"../../Hooks\";\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst AttendanceLog = () => {\r\n  const [empId, setEmpId] = useState(\"\");\r\n\r\n  const { data, loading } = useGetData(`attendance/view/logs?emp_id=${empId}`);\r\n  const { data: dataEmployee, loading: loadingEmployee } =\r\n    useGetData(\"employee\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      width: 70,\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"employee\",\r\n    },\r\n    {\r\n      title: \"Site\",\r\n      dataIndex: \"site_id\",\r\n    },\r\n    {\r\n      title: \"Latitude\",\r\n      dataIndex: \"latitude\",\r\n    },\r\n    {\r\n      title: \"Longitude\",\r\n      dataIndex: \"longitude\",\r\n    },\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"time\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n        <Breadcrumb.Item\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => navigate(\"/attendance\")}\r\n        >\r\n          Attendance\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>Log</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div>\r\n        <Card>\r\n          <Title\r\n            level={3}\r\n            type=\"secondary\"\r\n            style={{ marginRight: 20, marginBottom: 30 }}\r\n          >\r\n            Attendance Log\r\n          </Title>\r\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <FormSelect\r\n              name=\"empId\"\r\n              placeholder=\"filter employee\"\r\n              onChange={(e) => setEmpId(e)}\r\n              loading={loadingEmployee}\r\n              disabled={loadingEmployee}\r\n              style={{ minWidth: 290 }}\r\n            >\r\n              {dataEmployee.map((item) => (\r\n                <Option value={item.id} key={item.id}>\r\n                  {`[${item.id}] ${item.name}`}\r\n                </Option>\r\n              ))}\r\n            </FormSelect>\r\n          </div>\r\n          <div style={{ marginTop: \"20px\" }}>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={data}\r\n              rowKey={(record) => record.id}\r\n              loading={loading}\r\n              scroll={{ y: 500 }}\r\n            />\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuth(AttendanceLog, [1]);\r\n"],"names":["WrappedComponent","protectedPage","props","authContext","useContext","AuthContext","navigate","useNavigate","accessToken","userToken","useEffect","window","indexOf","userRole","replace","isLoading","console","log","Title","Typography","Option","Select","withAuth","useState","empId","setEmpId","useGetData","data","loading","dataEmployee","loadingEmployee","style","margin","cursor","onClick","level","type","marginRight","marginBottom","display","flexDirection","name","placeholder","onChange","e","disabled","minWidth","map","item","value","id","marginTop","columns","title","dataIndex","width","dataSource","rowKey","record","scroll","y"],"sourceRoot":""}