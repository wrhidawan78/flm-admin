{"version":3,"file":"static/js/615.be3f00c2.chunk.js","mappings":"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","sources":["HOC/withAuth.js","Components/UserManagement/ModalCreateDivision.jsx","Pages/UserManagement/Division.js","Utils/myFormat.js","../node_modules/antd/es/divider/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../Store/AuthContext\";\nconst withAuth = (WrappedComponent, protectedPage) => {\n  // eslint-disable-next-line react/display-name\n  return (props) => {\n    const authContext = useContext(AuthContext);\n    const navigate = useNavigate();\n    const accessToken = authContext.userToken;\n\n    useEffect(() => {\n      if (typeof window !== \"undefined\") {\n        if (!accessToken) {\n          navigate(\"/auth\", { replace: true });\n        } else if (protectedPage?.indexOf(authContext.userRole) === -1) {\n          navigate(\"/403\", { replace: true });\n        }\n      }\n    }, [accessToken, authContext.userRole, navigate]);\n\n    if (typeof window !== \"undefined\") {\n      if (authContext.isLoading) {\n        console.log(\"loading from with auth\");\n        return null;\n      }\n\n      return <WrappedComponent {...props} />;\n    }\n    return null;\n  };\n};\n\nexport default withAuth;\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Form, Divider, Button, message } from \"antd\";\nimport { FormInput, FlexEnd } from \"..\";\nimport { usePostData } from \"../../Hooks\";\nimport { setInput } from \"../../Utils/myFormat\";\nimport { FiNavigation } from \"react-icons/fi\";\n\nconst ModalCreateDivision = ({ visible, onCancel, setUpdateData }) => {\n  const [divisionId, setDivisionId] = useState(\"\");\n  const [divisionName, setDivisionName] = useState(\"\");\n\n  const resetState = () => {\n    setDivisionId(\"\");\n    setDivisionName(\"\");\n    form.resetFields();\n  };\n\n  const [form] = Form.useForm();\n\n  const [dataPost, setDataPost] = useState({\n    url: \"\",\n    data: {},\n    trigger: 0,\n  });\n\n  const { onSuccess, loading } = usePostData(\n    dataPost.url,\n    dataPost.data,\n    dataPost.trigger\n  );\n\n  const handlePostDivision = () => {\n    if (!divisionId || !divisionName) {\n      message.warn(\"Form tidak boleh kosong\");\n\n      return null;\n    }\n\n    const dataPost = {\n      name: divisionName,\n      division_id: divisionId,\n    };\n    console.log(\"data post: \", dataPost);\n\n    setDataPost({\n      url: \"employee/division/add\",\n      data: dataPost,\n      trigger: new Date().getTime(),\n    });\n  };\n\n  useEffect(() => {\n    if (onSuccess.includes(\"success\")) {\n      message.success(`Berhasil Create Division ${divisionId}`);\n      resetState();\n      onCancel();\n      setUpdateData(Date.now());\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onSuccess]);\n\n  return (\n    <Modal\n      title=\"Create Division\"\n      visible={visible}\n      onCancel={onCancel}\n      footer={false}\n    >\n      <Form form={form} name=\"createsite\" autoComplete=\"off\">\n        <FormInput\n          label=\"Division Id\"\n          requiredLabel\n          name=\"divisionId\"\n          required\n          message=\"please input division id!\"\n          placeholder=\"input division id\"\n          onChange={(e) => setInput(e, setDivisionId)}\n        />\n        <FormInput\n          label=\"Division Name\"\n          requiredLabel\n          name=\"divisionName\"\n          required\n          message=\"please input division name!\"\n          placeholder=\"input division name\"\n          onChange={(e) => setInput(e, setDivisionName)}\n        />\n        <Divider />\n        <FlexEnd>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              shape=\"round\"\n              icon={<FiNavigation style={{ marginRight: \"6px\" }} />}\n              onClick={handlePostDivision}\n              loading={loading}\n              htmlType=\"submit\"\n            >\n              Create Division\n            </Button>\n          </Form.Item>\n        </FlexEnd>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ModalCreateDivision;\n","import React, { useState, useRef, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Breadcrumb, Typography, Row, Button, Form, Table } from \"antd\";\nimport withAuth from \"../../HOC/withAuth\";\nimport { Card, FormInput, GridLarge, GridSmall } from \"../../Components\";\nimport { FiPlusSquare, FiSearch } from \"react-icons/fi\";\nimport { inActiveColor } from \"../../Utils/colors\";\nimport { useGetData, useDisclosure } from \"../../Hooks\";\nimport debounce from \"lodash.debounce\";\nimport ModalCreateDivision from \"../../Components/UserManagement/ModalCreateDivision\";\n\nconst { Title } = Typography;\n\nconst Division = () => {\n  const [updateData, setUpdateData] = useState(0);\n  const { data, loading } = useGetData(\"employee/division/list\", updateData);\n\n  const [searchData, setSearchData] = useState(\"\");\n\n  const newDivision = useMemo(\n    () =>\n      data.length === 0\n        ? []\n        : data.filter((item) =>\n            item.name?.toLowerCase().includes(searchData?.toLowerCase())\n          ),\n    [data, searchData]\n  );\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const navigate = useNavigate();\n\n  const handleSearchData = useRef(\n    debounce((valueSearch) => setSearchData(valueSearch), 1000)\n  ).current;\n\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"id\",\n      width: 70,\n    },\n    {\n      title: \"Division ID\",\n      dataIndex: \"division_id\",\n    },\n    {\n      title: \"Division Name\",\n      dataIndex: \"name\",\n    },\n  ];\n\n  return (\n    <div>\n      <Breadcrumb style={{ margin: \"16px 0\" }}>\n        <Breadcrumb.Item\n          style={{ cursor: \"pointer\" }}\n          onClick={() => navigate(\"/user-management\")}\n        >\n          User Management\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Division</Breadcrumb.Item>\n      </Breadcrumb>\n      <ModalCreateDivision\n        visible={isOpen}\n        onCancel={onClose}\n        setUpdateData={setUpdateData}\n      />\n      <div>\n        <Card>\n          <Title\n            level={3}\n            type=\"secondary\"\n            style={{ marginRight: 20, marginBottom: 30 }}\n          >\n            Division\n          </Title>\n          <Row gutter={[16, 10]}>\n            <GridLarge>\n              <Button\n                shape=\"round\"\n                icon={<FiPlusSquare style={{ marginRight: 6 }} />}\n                onClick={onOpen}\n              >\n                New Division\n              </Button>\n            </GridLarge>\n            <GridSmall>\n              <Form name=\"searchDivision\" autoComplete=\"off\">\n                <FormInput\n                  name=\"search\"\n                  prefix={<FiSearch color={inActiveColor} />}\n                  allowClear={true}\n                  placeholder=\"serach division\"\n                  value={searchData}\n                  onChange={(val) => handleSearchData(val.target.value)}\n                />\n              </Form>\n            </GridSmall>\n          </Row>\n          <div style={{ marginTop: \"20px\" }}>\n            <Table\n              columns={columns}\n              dataSource={newDivision}\n              rowKey={(record) => record.id}\n              loading={loading}\n              scroll={{ y: 500 }}\n            />\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default withAuth(Division);\n","import moment from \"moment\";\nimport debounce from \"lodash.debounce\";\n\nconst myNumberFormat = (number) => {\n  return new Intl.NumberFormat(\"id-ID\").format(number);\n};\n\nconst myCurrencyFormat = (curr) => {\n  return new Intl.NumberFormat(\"id-ID\", {\n    style: \"currency\",\n    currency: \"IDR\",\n  }).format(curr);\n};\n\nconst myDateTimeFormat = (date) => {\n  return new Date(date).toLocaleString(\"id-ID\", {\n    weekday: \"short\",\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n};\n\nconst myDateFormat = (date) => {\n  return new Date(date).toLocaleDateString(\"id-ID\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n};\n\nconst myTimeFormat = (time) => {\n  return new Date(time).toLocaleTimeString(\"id-ID\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n};\n\nconst myDateIndo = (date) => {\n  if (typeof date === \"object\") {\n    const newDate = moment(date).format();\n\n    return newDate.substring(0, 10);\n  }\n  return date;\n};\n\nconst mySum = (arr) => {\n  if (typeof arr === \"object\") {\n    const reduce = arr.reduce((acc, curr) => acc + curr);\n    return reduce;\n  }\n  return arr;\n};\n\nconst toCapitalize = (string) => {\n  if (typeof string === \"string\") {\n    return string.replace(/\\w\\S*/g, (w) =>\n      w.replace(/^\\w/, (c) => c.toUpperCase())\n    );\n  }\n  return string;\n};\n\nconst setInput = debounce((e, setValue) => setValue(e.target.value), 500);\n\nconst getChartOverview = (prev, arr, selectFilter, selectMonth) => {\n  if (arr.length === 0) {\n    return [];\n  }\n\n  const tahun = new Date().getFullYear();\n  const bulan = new Date().getMonth() + 1;\n  const sliceData = arr[0].iyear === tahun ? bulan + 1 : 13;\n  let prevData = prev;\n  let jan = 0;\n  let feb = 0;\n  let mar = 0;\n  let apr = 0;\n  let mei = 0;\n  let jun = 0;\n  let jul = 0;\n  let agu = 0;\n  let sep = 0;\n  let okt = 0;\n  let nov = 0;\n  let des = 0;\n\n  const dataFilter = arr.map((item) => item[selectFilter]);\n\n  arr.map((item) => {\n    if (item[selectMonth] === 1) {\n      jan = dataFilter[0] + prev;\n    }\n    if (item[selectMonth] === 2) {\n      feb = mySum(dataFilter.slice(0, 2)) + prev;\n    }\n    if (item[selectMonth] === 3) {\n      mar = mySum(dataFilter.slice(0, 3)) + prev;\n    }\n    if (item[selectMonth] === 4) {\n      apr = mySum(dataFilter.slice(0, 4)) + prev;\n    }\n    if (item[selectMonth] === 5) {\n      mei = mySum(dataFilter.slice(0, 5)) + prev;\n    }\n    if (item[selectMonth] === 6) {\n      jun = mySum(dataFilter.slice(0, 6)) + prev;\n    }\n    if (item[selectMonth] === 7) {\n      jul = mySum(dataFilter.slice(0, 7)) + prev;\n    }\n    if (item[selectMonth] === 8) {\n      agu = mySum(dataFilter.slice(0, 8)) + prev;\n    }\n    if (item[selectMonth] === 9) {\n      sep = mySum(dataFilter.slice(0, 9)) + prev;\n    }\n    if (item[selectMonth] === 10) {\n      okt = mySum(dataFilter.slice(0, 10)) + prev;\n    }\n    if (item[selectMonth] === 11) {\n      nov = mySum(dataFilter.slice(0, 11)) + prev;\n    }\n    if (item[selectMonth] === 12) {\n      des = mySum(dataFilter.slice(0, 12)) + prev;\n    }\n\n    return item[selectMonth];\n  });\n\n  return [\n    prevData,\n    jan,\n    feb,\n    mar,\n    apr,\n    mei,\n    jun,\n    jul,\n    agu,\n    sep,\n    okt,\n    nov,\n    des,\n  ].slice(0, sliceData);\n};\n\nconst getRandomColor = () => {\n  return Math.floor(Math.random() * 9);\n};\n\nconst myMeterFormat = number => {\n  if (typeof number === 'number') {\n    if (number >= 1000000) {\n      return `${(number / 1000000).toFixed(2)} MM`;\n    } else if (number >= 1000) {\n      return `${(number / 1000).toFixed(2)} KM`;\n    } else {\n      return `${number} Meter`;\n    }\n  }\n\n  return number;\n};\n\nexport {\n  myNumberFormat,\n  myCurrencyFormat,\n  myDateTimeFormat,\n  myDateFormat,\n  myTimeFormat,\n  mySum,\n  toCapitalize,\n  myDateIndo,\n  setInput,\n  getChartOverview,\n  getRandomColor,\n  myMeterFormat,\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        orientationMargin = props.orientationMargin,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n    var hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-left\"), hasCustomMarginLeft), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-right\"), hasCustomMarginRight), _classNames), className);\n\n    var innerStyle = _extends(_extends({}, hasCustomMarginLeft && {\n      marginLeft: orientationMargin\n    }), hasCustomMarginRight && {\n      marginRight: orientationMargin\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\"),\n      style: innerStyle\n    }, children));\n  });\n};\n\nexport default Divider;","import { Row } from '../grid';\nexport default Row;"],"names":["WrappedComponent","protectedPage","props","authContext","useContext","AuthContext","navigate","useNavigate","accessToken","userToken","useEffect","window","indexOf","userRole","replace","isLoading","console","log","visible","onCancel","setUpdateData","useState","divisionId","setDivisionId","divisionName","setDivisionName","Form","form","url","data","trigger","dataPost","setDataPost","usePostData","onSuccess","loading","includes","message","resetFields","Date","now","title","footer","name","autoComplete","label","requiredLabel","required","placeholder","onChange","e","setInput","type","shape","icon","style","marginRight","onClick","division_id","getTime","htmlType","Title","Typography","withAuth","updateData","useGetData","searchData","setSearchData","newDivision","useMemo","length","filter","item","toLowerCase","useDisclosure","isOpen","onOpen","onClose","handleSearchData","useRef","debounce","valueSearch","current","margin","cursor","level","marginBottom","gutter","prefix","color","inActiveColor","allowClear","value","val","target","marginTop","columns","dataIndex","width","dataSource","rowKey","record","id","scroll","y","myNumberFormat","number","Intl","NumberFormat","format","myDateFormat","date","toLocaleDateString","year","month","day","setValue","myMeterFormat","toFixed","__rest","s","t","p","Object","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","React","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","orientationMargin","className","children","dashed","plain","restProps","orientationPrefix","concat","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","classNames","_defineProperty","innerStyle","_extends","marginLeft","role","Row"],"sourceRoot":""}