{"version":3,"file":"static/js/168.93c40d94.chunk.js","mappings":"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","sources":["HOC/withAuth.js","Components/UserManagement/ModalCreateUpdateCluster.jsx","Pages/UserManagement/Cluster.js","Utils/myFormat.js","../node_modules/antd/es/divider/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../Store/AuthContext\";\nconst withAuth = (WrappedComponent, protectedPage) => {\n  // eslint-disable-next-line react/display-name\n  return (props) => {\n    const authContext = useContext(AuthContext);\n    const navigate = useNavigate();\n    const accessToken = authContext.userToken;\n\n    useEffect(() => {\n      if (typeof window !== \"undefined\") {\n        if (!accessToken) {\n          navigate(\"/auth\", { replace: true });\n        } else if (protectedPage?.indexOf(authContext.userRole) === -1) {\n          navigate(\"/403\", { replace: true });\n        }\n      }\n    }, [accessToken, authContext.userRole, navigate]);\n\n    if (typeof window !== \"undefined\") {\n      if (authContext.isLoading) {\n        console.log(\"loading from with auth\");\n        return null;\n      }\n\n      return <WrappedComponent {...props} />;\n    }\n    return null;\n  };\n};\n\nexport default withAuth;\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { Modal, Form, Divider, Button, message, Select } from \"antd\";\r\nimport { FormInput, FlexEnd, FormSelect } from \"..\";\r\nimport { useGetData, usePostData, useUpdateData } from \"../../Hooks\";\r\nimport { setInput } from \"../../Utils/myFormat\";\r\nimport { FiNavigation } from \"react-icons/fi\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst ModalCreateUpdateCluster = ({\r\n  visible,\r\n  onCancel,\r\n  setUpdateData,\r\n  data,\r\n  updating,\r\n}) => {\r\n  const { data: dataArea, loading: loadingArea } = useGetData(\"area\");\r\n  const [clusterId, setClusterId] = useState(\"\");\r\n  const [clusterName, setClusterName] = useState(\"\");\r\n  const [areaId, setAreaId] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const areaName = useMemo(() => {\r\n    if (!areaId) {\r\n      return \"\";\r\n    }\r\n\r\n    const area = [...dataArea].filter((item) => item.id === areaId);\r\n\r\n    return area[0].name;\r\n  }, [dataArea, areaId]);\r\n\r\n  const newArea = useMemo(() => dataArea, [dataArea]);\r\n\r\n  const resetState = () => {\r\n    setClusterId(\"\");\r\n    setClusterName(\"\");\r\n    setAreaId(\"\");\r\n    setStatus(\"\");\r\n    form.resetFields();\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [dataPost, setDataPost] = useState({\r\n    url: \"\",\r\n    data: {},\r\n    trigger: 0,\r\n  });\r\n  const [dataUpdate, setDataUpdate] = useState({\r\n    url: \"\",\r\n    data: {},\r\n    trigger: 0,\r\n  });\r\n\r\n  const { onSuccess: successPost, loading: loadingPost } = usePostData(\r\n    dataPost.url,\r\n    dataPost.data,\r\n    dataPost.trigger\r\n  );\r\n  const { onSuccess: successUpdate, loading: loadingUpdate } = useUpdateData(\r\n    dataUpdate.url,\r\n    dataUpdate.data,\r\n    dataUpdate.trigger\r\n  );\r\n\r\n  const handlePostCluster = () => {\r\n    if (!clusterName || !areaId || !areaName || status === \"\") {\r\n      message.warn(\"Form tidak boleh kosong\");\r\n\r\n      return null;\r\n    }\r\n\r\n    const dataPost = {\r\n      area_name: areaName,\r\n      area_id: areaId,\r\n      name: clusterName,\r\n      status: status,\r\n    };\r\n    console.log(\"data post: \", dataPost);\r\n\r\n    setDataPost({\r\n      url: \"area/create/cluster\",\r\n      data: dataPost,\r\n      trigger: new Date().getTime(),\r\n    });\r\n  };\r\n\r\n  const handleUpdateCluster = () => {\r\n    if (!clusterId || !clusterName || !areaId || !areaName || status === \"\") {\r\n      message.warn(\"Form tidak boleh kosong\");\r\n\r\n      return null;\r\n    }\r\n\r\n    const dataUpdate = {\r\n      area_name: areaName,\r\n      area_id: areaId,\r\n      name: clusterName,\r\n      status: status,\r\n    };\r\n    console.log(\"data update: \", dataUpdate);\r\n\r\n    setDataUpdate({\r\n      url: `area/edit/cluster?cluster_id=${clusterId}`,\r\n      data: dataUpdate,\r\n      trigger: new Date().getTime(),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (successPost.includes(\"success\")) {\r\n      message.success(`Berhasil Create Area ${areaId}`);\r\n      resetState();\r\n      onCancel();\r\n      setUpdateData(Date.now());\r\n    }\r\n    if (successUpdate.includes(\"success\")) {\r\n      message.success(`Berhasil Update Area ${areaId}`);\r\n      resetState();\r\n      onCancel();\r\n      setUpdateData(Date.now());\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [successPost, successUpdate]);\r\n\r\n  useEffect(() => {\r\n    if (data.id && updating) {\r\n      setClusterId(data.id);\r\n      setClusterName(data.name);\r\n      setAreaId(data.area_id);\r\n      setStatus(data.status);\r\n      form.setFieldsValue({\r\n        clusterName: data.name,\r\n        areaId: data.area_id,\r\n        status: data.status,\r\n      });\r\n    } else {\r\n      resetState();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, updating]);\r\n\r\n  return (\r\n    <Modal\r\n      title={updating ? \"Update Cluster\" : \"Create Cluster\"}\r\n      visible={visible}\r\n      onCancel={onCancel}\r\n      footer={false}\r\n    >\r\n      <Form form={form} name=\"createsite\" autoComplete=\"off\">\r\n        <FormInput\r\n          label=\"Cluster Name\"\r\n          requiredLabel\r\n          name=\"clusterName\"\r\n          required\r\n          message=\"please input cluster name!\"\r\n          placeholder=\"input cluster name\"\r\n          onChange={(e) => setInput(e, setClusterName)}\r\n        />\r\n        <FormSelect\r\n          name=\"areaId\"\r\n          label=\"Area\"\r\n          requiredLabel\r\n          required\r\n          message=\"Please select area!\"\r\n          placeholder=\"select area\"\r\n          allowClear\r\n          showSearch\r\n          optionFilterProp=\"children\"\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n          onChange={(e) => setAreaId(e)}\r\n          loading={loadingArea}\r\n          disabled={loadingArea}\r\n        >\r\n          {newArea.map((item) => (\r\n            <Option value={item.id} key={item.id}>\r\n              {`[${item.id}] ${item.name}`}\r\n            </Option>\r\n          ))}\r\n        </FormSelect>\r\n        <FormSelect\r\n          name=\"status\"\r\n          label=\"Status\"\r\n          requiredLabel\r\n          required\r\n          message=\"Please select status!\"\r\n          placeholder=\"select status\"\r\n          onChange={(e) => setStatus(e)}\r\n        >\r\n          <Option value={1}>Active</Option>\r\n          <Option value={0}>Inactive</Option>\r\n        </FormSelect>\r\n        <Divider />\r\n        <FlexEnd>\r\n          <Form.Item>\r\n            {updating ? (\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"round\"\r\n                icon={<FiNavigation style={{ marginRight: \"6px\" }} />}\r\n                onClick={handleUpdateCluster}\r\n                loading={loadingUpdate}\r\n                htmlType=\"submit\"\r\n              >\r\n                Update Cluster\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"round\"\r\n                icon={<FiNavigation style={{ marginRight: \"6px\" }} />}\r\n                onClick={handlePostCluster}\r\n                loading={loadingPost}\r\n                htmlType=\"submit\"\r\n              >\r\n                Create Cluster\r\n              </Button>\r\n            )}\r\n          </Form.Item>\r\n        </FlexEnd>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalCreateUpdateCluster;\r\n","import React, { useState, useRef, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Breadcrumb, Typography, Row, Button, Form, Table } from \"antd\";\nimport withAuth from \"../../HOC/withAuth\";\nimport { Card, FormInput, GridLarge, GridSmall } from \"../../Components\";\nimport { FiPlusSquare, FiSearch } from \"react-icons/fi\";\nimport { inActiveColor } from \"../../Utils/colors\";\nimport { myDateFormat } from \"../../Utils/myFormat\";\nimport { useGetData, useDisclosure } from \"../../Hooks\";\nimport debounce from \"lodash.debounce\";\nimport ModalCreateUpdateCluster from \"../../Components/UserManagement/ModalCreateUpdateCluster\";\n\nconst { Title, Text } = Typography;\n\nconst Cluster = () => {\n  const [updateData, setUpdateData] = useState(0);\n  const { data, loading } = useGetData(\"area/cluster\", updateData);\n\n  const [searchData, setSearchData] = useState(\"\");\n  const [dataTemp, setdataTemp] = useState({});\n  const [updating, setUpdating] = useState(false);\n\n  const newCluster = useMemo(\n    () =>\n      data.length === 0\n        ? []\n        : data.filter((item) =>\n            item.name?.toLowerCase().includes(searchData?.toLowerCase())\n          ),\n    [data, searchData]\n  );\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const navigate = useNavigate();\n\n  const handleSearchData = useRef(\n    debounce((valueSearch) => setSearchData(valueSearch), 1000)\n  ).current;\n\n  const handleNewCluster = () => {\n    setUpdating(false);\n    onOpen();\n  };\n\n  const handelUpdateCluster = (record) => {\n    setUpdating(true);\n    setdataTemp(record);\n    onOpen();\n  };\n\n  const columns = [\n    {\n      title: \"#\",\n      dataIndex: \"id\",\n      render: (text, record) => (\n        <Text\n          strong\n          style={{ cursor: \"pointer\" }}\n          onClick={() => handelUpdateCluster(record)}\n        >\n          {text}\n        </Text>\n      ),\n      width: 70,\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      render: (text, record) => (\n        <Text\n          strong\n          style={{ cursor: \"pointer\" }}\n          onClick={() => handelUpdateCluster(record)}\n        >\n          {text}\n        </Text>\n      ),\n    },\n    {\n      title: \"Area\",\n      dataIndex: \"area_name\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n    },\n    {\n      title: \"Created\",\n      dataIndex: \"created_at\",\n      render: (text) => myDateFormat(text),\n    },\n  ];\n\n  return (\n    <div>\n      <Breadcrumb style={{ margin: \"16px 0\" }}>\n        <Breadcrumb.Item\n          style={{ cursor: \"pointer\" }}\n          onClick={() => navigate(\"/user-management\")}\n        >\n          User Management\n        </Breadcrumb.Item>\n        <Breadcrumb.Item\n          style={{ cursor: \"pointer\" }}\n          onClick={() => navigate(\"/user-management/area\")}\n        >\n          Area\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>Cluster</Breadcrumb.Item>\n      </Breadcrumb>\n      <ModalCreateUpdateCluster\n        visible={isOpen}\n        onCancel={onClose}\n        setUpdateData={setUpdateData}\n        data={dataTemp}\n        updating={updating}\n      />\n      <div>\n        <Card>\n          <Title\n            level={3}\n            type=\"secondary\"\n            style={{ marginRight: 20, marginBottom: 30 }}\n          >\n            Cluster\n          </Title>\n          <Row gutter={[16, 10]}>\n            <GridLarge>\n              <Button\n                shape=\"round\"\n                icon={<FiPlusSquare style={{ marginRight: 6 }} />}\n                onClick={handleNewCluster}\n              >\n                New Cluster\n              </Button>\n            </GridLarge>\n            <GridSmall>\n              <Form name=\"searchCluster\" autoComplete=\"off\">\n                <FormInput\n                  name=\"search\"\n                  prefix={<FiSearch color={inActiveColor} />}\n                  allowClear={true}\n                  placeholder=\"serach cluster\"\n                  value={searchData}\n                  onChange={(val) => handleSearchData(val.target.value)}\n                />\n              </Form>\n            </GridSmall>\n          </Row>\n          <div style={{ marginTop: \"20px\" }}>\n            <Table\n              columns={columns}\n              dataSource={newCluster}\n              rowKey={(record) => record.id}\n              loading={loading}\n              scroll={{ y: 500 }}\n            />\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default withAuth(Cluster);\n","import moment from \"moment\";\nimport debounce from \"lodash.debounce\";\n\nconst myNumberFormat = (number) => {\n  return new Intl.NumberFormat(\"id-ID\").format(number);\n};\n\nconst myCurrencyFormat = (curr) => {\n  return new Intl.NumberFormat(\"id-ID\", {\n    style: \"currency\",\n    currency: \"IDR\",\n  }).format(curr);\n};\n\nconst myDateTimeFormat = (date) => {\n  return new Date(date).toLocaleString(\"id-ID\", {\n    weekday: \"short\",\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n};\n\nconst myDateFormat = (date) => {\n  return new Date(date).toLocaleDateString(\"id-ID\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n};\n\nconst myTimeFormat = (time) => {\n  return new Date(time).toLocaleTimeString(\"id-ID\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n};\n\nconst myDateIndo = (date) => {\n  if (typeof date === \"object\") {\n    const newDate = moment(date).format();\n\n    return newDate.substring(0, 10);\n  }\n  return date;\n};\n\nconst mySum = (arr) => {\n  if (typeof arr === \"object\") {\n    const reduce = arr.reduce((acc, curr) => acc + curr);\n    return reduce;\n  }\n  return arr;\n};\n\nconst toCapitalize = (string) => {\n  if (typeof string === \"string\") {\n    return string.replace(/\\w\\S*/g, (w) =>\n      w.replace(/^\\w/, (c) => c.toUpperCase())\n    );\n  }\n  return string;\n};\n\nconst setInput = debounce((e, setValue) => setValue(e.target.value), 500);\n\nconst getChartOverview = (prev, arr, selectFilter, selectMonth) => {\n  if (arr.length === 0) {\n    return [];\n  }\n\n  const tahun = new Date().getFullYear();\n  const bulan = new Date().getMonth() + 1;\n  const sliceData = arr[0].iyear === tahun ? bulan + 1 : 13;\n  let prevData = prev;\n  let jan = 0;\n  let feb = 0;\n  let mar = 0;\n  let apr = 0;\n  let mei = 0;\n  let jun = 0;\n  let jul = 0;\n  let agu = 0;\n  let sep = 0;\n  let okt = 0;\n  let nov = 0;\n  let des = 0;\n\n  const dataFilter = arr.map((item) => item[selectFilter]);\n\n  arr.map((item) => {\n    if (item[selectMonth] === 1) {\n      jan = dataFilter[0] + prev;\n    }\n    if (item[selectMonth] === 2) {\n      feb = mySum(dataFilter.slice(0, 2)) + prev;\n    }\n    if (item[selectMonth] === 3) {\n      mar = mySum(dataFilter.slice(0, 3)) + prev;\n    }\n    if (item[selectMonth] === 4) {\n      apr = mySum(dataFilter.slice(0, 4)) + prev;\n    }\n    if (item[selectMonth] === 5) {\n      mei = mySum(dataFilter.slice(0, 5)) + prev;\n    }\n    if (item[selectMonth] === 6) {\n      jun = mySum(dataFilter.slice(0, 6)) + prev;\n    }\n    if (item[selectMonth] === 7) {\n      jul = mySum(dataFilter.slice(0, 7)) + prev;\n    }\n    if (item[selectMonth] === 8) {\n      agu = mySum(dataFilter.slice(0, 8)) + prev;\n    }\n    if (item[selectMonth] === 9) {\n      sep = mySum(dataFilter.slice(0, 9)) + prev;\n    }\n    if (item[selectMonth] === 10) {\n      okt = mySum(dataFilter.slice(0, 10)) + prev;\n    }\n    if (item[selectMonth] === 11) {\n      nov = mySum(dataFilter.slice(0, 11)) + prev;\n    }\n    if (item[selectMonth] === 12) {\n      des = mySum(dataFilter.slice(0, 12)) + prev;\n    }\n\n    return item[selectMonth];\n  });\n\n  return [\n    prevData,\n    jan,\n    feb,\n    mar,\n    apr,\n    mei,\n    jun,\n    jul,\n    agu,\n    sep,\n    okt,\n    nov,\n    des,\n  ].slice(0, sliceData);\n};\n\nconst getRandomColor = () => {\n  return Math.floor(Math.random() * 9);\n};\n\nconst myMeterFormat = number => {\n  if (typeof number === 'number') {\n    if (number >= 1000000) {\n      return `${(number / 1000000).toFixed(2)} MM`;\n    } else if (number >= 1000) {\n      return `${(number / 1000).toFixed(2)} KM`;\n    } else {\n      return `${number} Meter`;\n    }\n  }\n\n  return number;\n};\n\nexport {\n  myNumberFormat,\n  myCurrencyFormat,\n  myDateTimeFormat,\n  myDateFormat,\n  myTimeFormat,\n  mySum,\n  toCapitalize,\n  myDateIndo,\n  setInput,\n  getChartOverview,\n  getRandomColor,\n  myMeterFormat,\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls,\n        direction = _ref.direction;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        orientationMargin = props.orientationMargin,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        plain = props.plain,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"children\", \"dashed\", \"plain\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var hasChildren = !!children;\n    var hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n    var hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n    var classString = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\"), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), hasChildren), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-plain\"), !!plain), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-left\"), hasCustomMarginLeft), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-default-orientation-margin-right\"), hasCustomMarginRight), _classNames), className);\n\n    var innerStyle = _extends(_extends({}, hasCustomMarginLeft && {\n      marginLeft: orientationMargin\n    }), hasCustomMarginRight && {\n      marginRight: orientationMargin\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\"),\n      style: innerStyle\n    }, children));\n  });\n};\n\nexport default Divider;","import { Row } from '../grid';\nexport default Row;"],"names":["WrappedComponent","protectedPage","props","authContext","useContext","AuthContext","navigate","useNavigate","accessToken","userToken","useEffect","window","indexOf","userRole","replace","isLoading","console","log","Option","Select","visible","onCancel","setUpdateData","data","updating","useGetData","dataArea","loadingArea","loading","useState","clusterId","setClusterId","clusterName","setClusterName","areaId","setAreaId","status","setStatus","areaName","useMemo","filter","item","id","name","newArea","resetState","form","resetFields","Form","url","trigger","dataPost","setDataPost","dataUpdate","setDataUpdate","usePostData","successPost","onSuccess","loadingPost","useUpdateData","successUpdate","loadingUpdate","includes","message","Date","now","area_id","setFieldsValue","title","footer","autoComplete","label","requiredLabel","required","placeholder","onChange","e","setInput","allowClear","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","disabled","map","value","type","shape","icon","style","marginRight","onClick","area_name","getTime","htmlType","Title","Typography","Text","withAuth","updateData","searchData","setSearchData","dataTemp","setdataTemp","setUpdating","newCluster","length","useDisclosure","isOpen","onOpen","onClose","handleSearchData","useRef","debounce","valueSearch","current","handelUpdateCluster","record","columns","dataIndex","render","text","strong","cursor","width","myDateFormat","margin","level","marginBottom","gutter","prefix","color","inActiveColor","val","target","marginTop","dataSource","rowKey","scroll","y","myNumberFormat","number","Intl","NumberFormat","format","date","toLocaleDateString","year","month","day","setValue","myMeterFormat","toFixed","__rest","s","t","p","Object","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","React","ConfigConsumer","_ref","_classNames","getPrefixCls","direction","customizePrefixCls","prefixCls","_props$type","_props$orientation","orientation","orientationMargin","className","dashed","plain","restProps","orientationPrefix","concat","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","classNames","_defineProperty","innerStyle","_extends","marginLeft","role","Row"],"sourceRoot":""}